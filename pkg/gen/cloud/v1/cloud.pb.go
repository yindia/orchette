// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cloud/v1/cloud.proto

package cloudv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common response for delete operations
type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                        // Whether the deletion was successful
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                         // Additional information about the operation
	DeletedIds    []string               `protobuf:"bytes,3,rep,name=deleted_ids,json=deletedIds,proto3" json:"deleted_ids,omitempty"` // IDs of resources that were deleted
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteResponse) GetDeletedIds() []string {
	if x != nil {
		return x.DeletedIds
	}
	return nil
}

// Common response for run operations
type RunResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                           // Whether the run was successfully scheduled
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                            // Additional information about the operation
	RunId         string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`                   // Unique identifier for this run instance
	ScheduledAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"` // When the run is scheduled for
	NextRunAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=next_run_at,json=nextRunAt,proto3" json:"next_run_at,omitempty"`     // When the next run will occur (for scheduled runs)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{1}
}

func (x *RunResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RunResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RunResponse) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *RunResponse) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *RunResponse) GetNextRunAt() *timestamppb.Timestamp {
	if x != nil {
		return x.NextRunAt
	}
	return nil
}

// Task configuration for creation and updates
type TaskConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                 // User-provided unique name for the task
	Dependencies  []string               `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`                                                                 // List of task IDs that must complete before this task can run
	Payload       map[string]string      `protobuf:"bytes,3,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // User-defined metadata or configuration for the task
	Schedule      string                 `protobuf:"bytes,4,opt,name=schedule,proto3" json:"schedule,omitempty"`                                                                         // Optional cron expression for scheduling the task
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskConfig) Reset() {
	*x = TaskConfig{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskConfig) ProtoMessage() {}

func (x *TaskConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskConfig.ProtoReflect.Descriptor instead.
func (*TaskConfig) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{2}
}

func (x *TaskConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskConfig) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *TaskConfig) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaskConfig) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

// Task definition with runtime information
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // Server-generated unique identifier
	Config        *TaskConfig            `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`                           // Task configuration
	WorkflowId    string                 `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"` // Optional: ID of the workflow this task belongs to
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`    // When the task was created
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`    // When the task was last updated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{3}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetConfig() *TaskConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Task) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Workflow definition
type Workflow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // Server-generated unique identifier
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                            // User-provided unique name
	Schedule      string                 `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`                    // Optional cron expression for scheduling the workflow
	Tasks         []*Task                `protobuf:"bytes,4,rep,name=tasks,proto3" json:"tasks,omitempty"`                          // Tasks that are part of this workflow
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // When the workflow was created
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // When the workflow was last updated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{4}
}

func (x *Workflow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Workflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workflow) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *Workflow) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Workflow) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Workflow) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Request to create a new workflow
type CreateWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`         // User-provided unique name
	Schedule      string                 `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"` // Optional cron expression for scheduling
	Tasks         []*TaskConfig          `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`       // Tasks to be created as part of the workflow
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkflowRequest) Reset() {
	*x = CreateWorkflowRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowRequest) ProtoMessage() {}

func (x *CreateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{5}
}

func (x *CreateWorkflowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWorkflowRequest) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *CreateWorkflowRequest) GetTasks() []*TaskConfig {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Request to get a workflow
type GetWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Workflow ID to retrieve
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowRequest) Reset() {
	*x = GetWorkflowRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRequest) ProtoMessage() {}

func (x *GetWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{6}
}

func (x *GetWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to update a workflow
type UpdateWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             // Workflow ID to update
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`         // Optional: new name
	Schedule      string                 `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"` // Optional: new schedule
	Tasks         []*TaskConfig          `protobuf:"bytes,4,rep,name=tasks,proto3" json:"tasks,omitempty"`       // Optional: new tasks to add
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowRequest) Reset() {
	*x = UpdateWorkflowRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowRequest) ProtoMessage() {}

func (x *UpdateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateWorkflowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWorkflowRequest) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *UpdateWorkflowRequest) GetTasks() []*TaskConfig {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Request to list workflows
type ListWorkflowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // Number of workflows to return per page
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // Token for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsRequest) Reset() {
	*x = ListWorkflowsRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsRequest) ProtoMessage() {}

func (x *ListWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{8}
}

func (x *ListWorkflowsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWorkflowsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response containing a list of workflows
type ListWorkflowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflows     []*Workflow            `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty"`                                // List of workflows
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for the next page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsResponse) Reset() {
	*x = ListWorkflowsResponse{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsResponse) ProtoMessage() {}

func (x *ListWorkflowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowsResponse) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{9}
}

func (x *ListWorkflowsResponse) GetWorkflows() []*Workflow {
	if x != nil {
		return x.Workflows
	}
	return nil
}

func (x *ListWorkflowsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to create a new task
type CreateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *TaskConfig            `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`                           // Task configuration
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"` // Optional: ID of the workflow to associate with
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTaskRequest) GetConfig() *TaskConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateTaskRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

// Request to get a task
type GetTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Task ID to retrieve
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{11}
}

func (x *GetTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to update a task
type UpdateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // Task ID to update
	Config        *TaskConfig            `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`                           // Optional: new configuration
	WorkflowId    string                 `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"` // Optional: new workflow association
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTaskRequest) GetConfig() *TaskConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateTaskRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

// Request to list tasks
type ListTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"` // Optional: filter tasks by workflow ID
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`      // Number of tasks to return per page
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`    // Token for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{13}
}

func (x *ListTasksRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ListTasksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTasksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response containing a list of tasks
type ListTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`                                        // List of tasks
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for the next page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{14}
}

func (x *ListTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ListTasksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to delete a workflow
type DeleteWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                       // Workflow ID to delete
	DeleteTasks   bool                   `protobuf:"varint,2,opt,name=delete_tasks,json=deleteTasks,proto3" json:"delete_tasks,omitempty"` // Whether to delete associated tasks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkflowRequest) Reset() {
	*x = DeleteWorkflowRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowRequest) ProtoMessage() {}

func (x *DeleteWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteWorkflowRequest) GetDeleteTasks() bool {
	if x != nil {
		return x.DeleteTasks
	}
	return false
}

// Request to delete a task
type DeleteTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Task ID to delete
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to run a workflow
type RunWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                           // Workflow ID to run
	Parameters    map[string]string      `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Optional: parameters to override workflow defaults
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunWorkflowRequest) Reset() {
	*x = RunWorkflowRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunWorkflowRequest) ProtoMessage() {}

func (x *RunWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunWorkflowRequest.ProtoReflect.Descriptor instead.
func (*RunWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{17}
}

func (x *RunWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RunWorkflowRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Request to run a task
type RunTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                           // Task ID to run
	Parameters    map[string]string      `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Optional: parameters to override task defaults
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunTaskRequest) Reset() {
	*x = RunTaskRequest{}
	mi := &file_cloud_v1_cloud_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTaskRequest) ProtoMessage() {}

func (x *RunTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_v1_cloud_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTaskRequest.ProtoReflect.Descriptor instead.
func (*RunTaskRequest) Descriptor() ([]byte, []int) {
	return file_cloud_v1_cloud_proto_rawDescGZIP(), []int{18}
}

func (x *RunTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RunTaskRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

var File_cloud_v1_cloud_proto protoreflect.FileDescriptor

const file_cloud_v1_cloud_proto_rawDesc = "" +
	"\n" +
	"\x14cloud/v1/cloud.proto\x12\bcloud.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\"e\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vdeleted_ids\x18\x03 \x03(\tR\n" +
	"deletedIds\"\xd3\x01\n" +
	"\vRunResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12=\n" +
	"\fscheduled_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x12:\n" +
	"\vnext_run_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tnextRunAt\"\xf2\x02\n" +
	"\n" +
	"TaskConfig\x12/\n" +
	"\x04name\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x04name\x12,\n" +
	"\fdependencies\x18\x02 \x03(\tB\b\xfaB\x05\x92\x01\x02\x10dR\fdependencies\x12f\n" +
	"\apayload\x18\x03 \x03(\v2!.cloud.v1.TaskConfig.PayloadEntryB)\xfaB&\x9a\x01#\x102\"\x18r\x16\x10\x01\x1822\x10^[a-zA-Z0-9_-]+$*\x05r\x03\x18\xe8\aR\apayload\x12a\n" +
	"\bschedule\x18\x04 \x01(\tBE\xfaBBr@2>^$|^\\*|([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]) \\* \\* \\* \\*$R\bschedule\x1a:\n" +
	"\fPayloadEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb2\x02\n" +
	"\x04Task\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\x126\n" +
	"\x06config\x18\x02 \x01(\v2\x14.cloud.v1.TaskConfigB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06config\x12;\n" +
	"\vworkflow_id\x18\x03 \x01(\tB\x1a\xfaB\x17r\x152\x13^$|^[a-zA-Z0-9_-]+$R\n" +
	"workflowId\x12C\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tcreatedAt\x12C\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tupdatedAt\"\x86\x03\n" +
	"\bWorkflow\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\x12/\n" +
	"\x04name\x18\x02 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x04name\x12a\n" +
	"\bschedule\x18\x03 \x01(\tBE\xfaBBr@2>^$|^\\*|([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]) \\* \\* \\* \\*$R\bschedule\x12/\n" +
	"\x05tasks\x18\x04 \x03(\v2\x0e.cloud.v1.TaskB\t\xfaB\x06\x92\x01\x03\x10\xe8\aR\x05tasks\x12C\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tcreatedAt\x12C\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tupdatedAt\"\xe2\x01\n" +
	"\x15CreateWorkflowRequest\x12/\n" +
	"\x04name\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x04name\x12a\n" +
	"\bschedule\x18\x02 \x01(\tBE\xfaBBr@2>^$|^\\*|([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]) \\* \\* \\* \\*$R\bschedule\x125\n" +
	"\x05tasks\x18\x03 \x03(\v2\x14.cloud.v1.TaskConfigB\t\xfaB\x06\x92\x01\x03\x10\xe8\aR\x05tasks\"A\n" +
	"\x12GetWorkflowRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\"\x8f\x02\n" +
	"\x15UpdateWorkflowRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\x12/\n" +
	"\x04name\x18\x02 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x04name\x12a\n" +
	"\bschedule\x18\x03 \x01(\tBE\xfaBBr@2>^$|^\\*|([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]) \\* \\* \\* \\*$R\bschedule\x125\n" +
	"\x05tasks\x18\x04 \x03(\v2\x14.cloud.v1.TaskConfigB\t\xfaB\x06\x92\x01\x03\x10\xe8\aR\x05tasks\"f\n" +
	"\x14ListWorkflowsRequest\x12&\n" +
	"\tpage_size\x18\x01 \x01(\x05B\t\xfaB\x06\x1a\x04\x18d(\x01R\bpageSize\x12&\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x18dR\tpageToken\"z\n" +
	"\x15ListWorkflowsResponse\x120\n" +
	"\tworkflows\x18\x01 \x03(\v2\x12.cloud.v1.WorkflowR\tworkflows\x12/\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x18dR\rnextPageToken\"\x88\x01\n" +
	"\x11CreateTaskRequest\x126\n" +
	"\x06config\x18\x01 \x01(\v2\x14.cloud.v1.TaskConfigB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06config\x12;\n" +
	"\vworkflow_id\x18\x02 \x01(\tB\x1a\xfaB\x17r\x152\x13^$|^[a-zA-Z0-9_-]+$R\n" +
	"workflowId\"=\n" +
	"\x0eGetTaskRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\"\xab\x01\n" +
	"\x11UpdateTaskRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\x12,\n" +
	"\x06config\x18\x02 \x01(\v2\x14.cloud.v1.TaskConfigR\x06config\x12;\n" +
	"\vworkflow_id\x18\x03 \x01(\tB\x1a\xfaB\x17r\x152\x13^$|^[a-zA-Z0-9_-]+$R\n" +
	"workflowId\"\x9f\x01\n" +
	"\x10ListTasksRequest\x12;\n" +
	"\vworkflow_id\x18\x01 \x01(\tB\x1a\xfaB\x17r\x152\x13^$|^[a-zA-Z0-9_-]+$R\n" +
	"workflowId\x12&\n" +
	"\tpage_size\x18\x02 \x01(\x05B\t\xfaB\x06\x1a\x04\x18d(\x01R\bpageSize\x12&\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x18dR\tpageToken\"j\n" +
	"\x11ListTasksResponse\x12$\n" +
	"\x05tasks\x18\x01 \x03(\v2\x0e.cloud.v1.TaskR\x05tasks\x12/\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x18dR\rnextPageToken\"g\n" +
	"\x15DeleteWorkflowRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\x12!\n" +
	"\fdelete_tasks\x18\x02 \x01(\bR\vdeleteTasks\"@\n" +
	"\x11DeleteTaskRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\"\xf9\x01\n" +
	"\x12RunWorkflowRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\x12w\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2,.cloud.v1.RunWorkflowRequest.ParametersEntryB)\xfaB&\x9a\x01#\x102\"\x18r\x16\x10\x01\x1822\x10^[a-zA-Z0-9_-]+$*\x05r\x03\x18\xe8\aR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf1\x01\n" +
	"\x0eRunTaskRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xfaB\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\x12s\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2(.cloud.v1.RunTaskRequest.ParametersEntryB)\xfaB&\x9a\x01#\x102\"\x18r\x16\x10\x01\x1822\x10^[a-zA-Z0-9_-]+$*\x05r\x03\x18\xe8\aR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xaf\x06\n" +
	"\tScheduler\x12E\n" +
	"\x0eCreateWorkflow\x12\x1f.cloud.v1.CreateWorkflowRequest\x1a\x12.cloud.v1.Workflow\x12?\n" +
	"\vGetWorkflow\x12\x1c.cloud.v1.GetWorkflowRequest\x1a\x12.cloud.v1.Workflow\x12E\n" +
	"\x0eUpdateWorkflow\x12\x1f.cloud.v1.UpdateWorkflowRequest\x1a\x12.cloud.v1.Workflow\x12K\n" +
	"\x0eDeleteWorkflow\x12\x1f.cloud.v1.DeleteWorkflowRequest\x1a\x18.cloud.v1.DeleteResponse\x12P\n" +
	"\rListWorkflows\x12\x1e.cloud.v1.ListWorkflowsRequest\x1a\x1f.cloud.v1.ListWorkflowsResponse\x12B\n" +
	"\vRunWorkflow\x12\x1c.cloud.v1.RunWorkflowRequest\x1a\x15.cloud.v1.RunResponse\x129\n" +
	"\n" +
	"CreateTask\x12\x1b.cloud.v1.CreateTaskRequest\x1a\x0e.cloud.v1.Task\x123\n" +
	"\aGetTask\x12\x18.cloud.v1.GetTaskRequest\x1a\x0e.cloud.v1.Task\x129\n" +
	"\n" +
	"UpdateTask\x12\x1b.cloud.v1.UpdateTaskRequest\x1a\x0e.cloud.v1.Task\x12C\n" +
	"\n" +
	"DeleteTask\x12\x1b.cloud.v1.DeleteTaskRequest\x1a\x18.cloud.v1.DeleteResponse\x12D\n" +
	"\tListTasks\x12\x1a.cloud.v1.ListTasksRequest\x1a\x1b.cloud.v1.ListTasksResponse\x12:\n" +
	"\aRunTask\x12\x18.cloud.v1.RunTaskRequest\x1a\x15.cloud.v1.RunResponseBz\n" +
	"\fcom.cloud.v1B\n" +
	"CloudProtoP\x01Z\x1dtask/pkg/gen/cloud/v1;cloudv1\xa2\x02\x03CXX\xaa\x02\bCloud.V1\xca\x02\bCloud\\V1\xe2\x02\x14Cloud\\V1\\GPBMetadata\xea\x02\tCloud::V1b\x06proto3"

var (
	file_cloud_v1_cloud_proto_rawDescOnce sync.Once
	file_cloud_v1_cloud_proto_rawDescData []byte
)

func file_cloud_v1_cloud_proto_rawDescGZIP() []byte {
	file_cloud_v1_cloud_proto_rawDescOnce.Do(func() {
		file_cloud_v1_cloud_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloud_v1_cloud_proto_rawDesc), len(file_cloud_v1_cloud_proto_rawDesc)))
	})
	return file_cloud_v1_cloud_proto_rawDescData
}

var file_cloud_v1_cloud_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_cloud_v1_cloud_proto_goTypes = []any{
	(*DeleteResponse)(nil),        // 0: cloud.v1.DeleteResponse
	(*RunResponse)(nil),           // 1: cloud.v1.RunResponse
	(*TaskConfig)(nil),            // 2: cloud.v1.TaskConfig
	(*Task)(nil),                  // 3: cloud.v1.Task
	(*Workflow)(nil),              // 4: cloud.v1.Workflow
	(*CreateWorkflowRequest)(nil), // 5: cloud.v1.CreateWorkflowRequest
	(*GetWorkflowRequest)(nil),    // 6: cloud.v1.GetWorkflowRequest
	(*UpdateWorkflowRequest)(nil), // 7: cloud.v1.UpdateWorkflowRequest
	(*ListWorkflowsRequest)(nil),  // 8: cloud.v1.ListWorkflowsRequest
	(*ListWorkflowsResponse)(nil), // 9: cloud.v1.ListWorkflowsResponse
	(*CreateTaskRequest)(nil),     // 10: cloud.v1.CreateTaskRequest
	(*GetTaskRequest)(nil),        // 11: cloud.v1.GetTaskRequest
	(*UpdateTaskRequest)(nil),     // 12: cloud.v1.UpdateTaskRequest
	(*ListTasksRequest)(nil),      // 13: cloud.v1.ListTasksRequest
	(*ListTasksResponse)(nil),     // 14: cloud.v1.ListTasksResponse
	(*DeleteWorkflowRequest)(nil), // 15: cloud.v1.DeleteWorkflowRequest
	(*DeleteTaskRequest)(nil),     // 16: cloud.v1.DeleteTaskRequest
	(*RunWorkflowRequest)(nil),    // 17: cloud.v1.RunWorkflowRequest
	(*RunTaskRequest)(nil),        // 18: cloud.v1.RunTaskRequest
	nil,                           // 19: cloud.v1.TaskConfig.PayloadEntry
	nil,                           // 20: cloud.v1.RunWorkflowRequest.ParametersEntry
	nil,                           // 21: cloud.v1.RunTaskRequest.ParametersEntry
	(*timestamppb.Timestamp)(nil), // 22: google.protobuf.Timestamp
}
var file_cloud_v1_cloud_proto_depIdxs = []int32{
	22, // 0: cloud.v1.RunResponse.scheduled_at:type_name -> google.protobuf.Timestamp
	22, // 1: cloud.v1.RunResponse.next_run_at:type_name -> google.protobuf.Timestamp
	19, // 2: cloud.v1.TaskConfig.payload:type_name -> cloud.v1.TaskConfig.PayloadEntry
	2,  // 3: cloud.v1.Task.config:type_name -> cloud.v1.TaskConfig
	22, // 4: cloud.v1.Task.created_at:type_name -> google.protobuf.Timestamp
	22, // 5: cloud.v1.Task.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 6: cloud.v1.Workflow.tasks:type_name -> cloud.v1.Task
	22, // 7: cloud.v1.Workflow.created_at:type_name -> google.protobuf.Timestamp
	22, // 8: cloud.v1.Workflow.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 9: cloud.v1.CreateWorkflowRequest.tasks:type_name -> cloud.v1.TaskConfig
	2,  // 10: cloud.v1.UpdateWorkflowRequest.tasks:type_name -> cloud.v1.TaskConfig
	4,  // 11: cloud.v1.ListWorkflowsResponse.workflows:type_name -> cloud.v1.Workflow
	2,  // 12: cloud.v1.CreateTaskRequest.config:type_name -> cloud.v1.TaskConfig
	2,  // 13: cloud.v1.UpdateTaskRequest.config:type_name -> cloud.v1.TaskConfig
	3,  // 14: cloud.v1.ListTasksResponse.tasks:type_name -> cloud.v1.Task
	20, // 15: cloud.v1.RunWorkflowRequest.parameters:type_name -> cloud.v1.RunWorkflowRequest.ParametersEntry
	21, // 16: cloud.v1.RunTaskRequest.parameters:type_name -> cloud.v1.RunTaskRequest.ParametersEntry
	5,  // 17: cloud.v1.Scheduler.CreateWorkflow:input_type -> cloud.v1.CreateWorkflowRequest
	6,  // 18: cloud.v1.Scheduler.GetWorkflow:input_type -> cloud.v1.GetWorkflowRequest
	7,  // 19: cloud.v1.Scheduler.UpdateWorkflow:input_type -> cloud.v1.UpdateWorkflowRequest
	15, // 20: cloud.v1.Scheduler.DeleteWorkflow:input_type -> cloud.v1.DeleteWorkflowRequest
	8,  // 21: cloud.v1.Scheduler.ListWorkflows:input_type -> cloud.v1.ListWorkflowsRequest
	17, // 22: cloud.v1.Scheduler.RunWorkflow:input_type -> cloud.v1.RunWorkflowRequest
	10, // 23: cloud.v1.Scheduler.CreateTask:input_type -> cloud.v1.CreateTaskRequest
	11, // 24: cloud.v1.Scheduler.GetTask:input_type -> cloud.v1.GetTaskRequest
	12, // 25: cloud.v1.Scheduler.UpdateTask:input_type -> cloud.v1.UpdateTaskRequest
	16, // 26: cloud.v1.Scheduler.DeleteTask:input_type -> cloud.v1.DeleteTaskRequest
	13, // 27: cloud.v1.Scheduler.ListTasks:input_type -> cloud.v1.ListTasksRequest
	18, // 28: cloud.v1.Scheduler.RunTask:input_type -> cloud.v1.RunTaskRequest
	4,  // 29: cloud.v1.Scheduler.CreateWorkflow:output_type -> cloud.v1.Workflow
	4,  // 30: cloud.v1.Scheduler.GetWorkflow:output_type -> cloud.v1.Workflow
	4,  // 31: cloud.v1.Scheduler.UpdateWorkflow:output_type -> cloud.v1.Workflow
	0,  // 32: cloud.v1.Scheduler.DeleteWorkflow:output_type -> cloud.v1.DeleteResponse
	9,  // 33: cloud.v1.Scheduler.ListWorkflows:output_type -> cloud.v1.ListWorkflowsResponse
	1,  // 34: cloud.v1.Scheduler.RunWorkflow:output_type -> cloud.v1.RunResponse
	3,  // 35: cloud.v1.Scheduler.CreateTask:output_type -> cloud.v1.Task
	3,  // 36: cloud.v1.Scheduler.GetTask:output_type -> cloud.v1.Task
	3,  // 37: cloud.v1.Scheduler.UpdateTask:output_type -> cloud.v1.Task
	0,  // 38: cloud.v1.Scheduler.DeleteTask:output_type -> cloud.v1.DeleteResponse
	14, // 39: cloud.v1.Scheduler.ListTasks:output_type -> cloud.v1.ListTasksResponse
	1,  // 40: cloud.v1.Scheduler.RunTask:output_type -> cloud.v1.RunResponse
	29, // [29:41] is the sub-list for method output_type
	17, // [17:29] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_cloud_v1_cloud_proto_init() }
func file_cloud_v1_cloud_proto_init() {
	if File_cloud_v1_cloud_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloud_v1_cloud_proto_rawDesc), len(file_cloud_v1_cloud_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloud_v1_cloud_proto_goTypes,
		DependencyIndexes: file_cloud_v1_cloud_proto_depIdxs,
		MessageInfos:      file_cloud_v1_cloud_proto_msgTypes,
	}.Build()
	File_cloud_v1_cloud_proto = out.File
	file_cloud_v1_cloud_proto_goTypes = nil
	file_cloud_v1_cloud_proto_depIdxs = nil
}
